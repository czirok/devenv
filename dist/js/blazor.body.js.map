{"version":3,"file":"blazor.body.js","sources":["../src/OffcanvasSwipe.ts","../src/BackToTop.ts","../src/BlazorBody.ts"],"sourcesContent":["export class OffcanvasSwipe {\n\tprivate static readonly MinHorizontalMove = 100\n\tprivate static readonly MaxVerticalMove = 50\n\tprivate static readonly Millisecond = 300\n\n\tprivate swipeStartTime: Date = new Date(0)\n\tprivate swipeStartX: number = 0\n\tprivate swipeStartY: number = 0\n\tprivate swipeStartElement?: HTMLElement\n\tprivate swipeElement?: HTMLElement\n\tprivate offcanvasElement?: HTMLElement\n\tprivate isInitialized: boolean = false\n\tprivate isTouch: boolean = false\n\n\t// Bound event handlers to enable proper removal\n\tprivate boundHandlePointerDown: (e: PointerEvent) => void\n\tprivate boundHandlePointerUp: (e: PointerEvent) => void\n\tprivate boundHandleTouchStart: (e: TouchEvent) => void\n\tprivate boundHandleTouchEnd: (e: TouchEvent) => void\n\n\tconstructor() {\n\t\t// Platform support is universal, no need to check\n\t\t// Bind event handlers once to enable proper removal\n\t\tthis.boundHandlePointerDown = this.handlePointerDown.bind(this)\n\t\tthis.boundHandlePointerUp = this.handlePointerUp.bind(this)\n\t\tthis.boundHandleTouchStart = this.handleTouchStart.bind(this)\n\t\tthis.boundHandleTouchEnd = this.handleTouchEnd.bind(this)\n\t}\n\n\tpublic initialize(swipeAreaId: string, offcanvasId: string, isTouch: boolean): boolean {\n\t\tthis.isTouch = isTouch\n\n\t\t// Element references resolution\n\t\tthis.swipeElement = document.getElementById(swipeAreaId) as HTMLElement\n\t\tthis.offcanvasElement = document.getElementById(offcanvasId) as HTMLElement\n\n\t\tif (!this.swipeElement || !this.offcanvasElement) {\n\t\t\treturn false\n\t\t}\n\n\t\tthis.bindEvents()\n\t\tthis.isInitialized = true\n\t\treturn true\n\t}\n\n\tprivate bindEvents(): void {\n\t\tif (!this.swipeElement || !this.offcanvasElement)\n\t\t\treturn\n\n\t\tif (this.isTouch) {\n\t\t\t// Touch platform mode - TouchEvents only\n\t\t\t// Main area - for opening menu\n\t\t\tthis.swipeElement.addEventListener('touchstart', this.boundHandleTouchStart)\n\t\t\tthis.swipeElement.addEventListener('touchend', this.boundHandleTouchEnd)\n\t\t\t// Sidebar area - for closing menu\n\t\t\tthis.offcanvasElement.addEventListener('touchstart', this.boundHandleTouchStart)\n\t\t\tthis.offcanvasElement.addEventListener('touchend', this.boundHandleTouchEnd)\n\t\t}\n\t\telse {\n\t\t\t// Desktop platform mode - PointerEvents only\n\t\t\t// Main area - for opening menu\n\t\t\tthis.swipeElement.addEventListener('pointerdown', this.boundHandlePointerDown)\n\t\t\tthis.swipeElement.addEventListener('pointerup', this.boundHandlePointerUp)\n\t\t\t// Sidebar area - for closing menu\n\t\t\tthis.offcanvasElement.addEventListener('pointerdown', this.boundHandlePointerDown)\n\t\t\tthis.offcanvasElement.addEventListener('pointerup', this.boundHandlePointerUp)\n\t\t}\n\t}\n\n\tprivate handlePointerDown(e: PointerEvent): void {\n\t\te.stopPropagation()\n\t\tif (!e.isPrimary)\n\t\t\treturn\n\n\t\tthis.startSwipe(e.clientX, e.clientY, e.currentTarget as HTMLElement)\n\t}\n\n\tprivate handlePointerUp(e: PointerEvent): void {\n\t\te.stopPropagation()\n\t\tif (!e.isPrimary)\n\t\t\treturn\n\n\t\tconst moveX = e.clientX - this.swipeStartX\n\t\tconst moveY = e.clientY - this.swipeStartY\n\t\tconst elapsedTime = (new Date().getTime() - this.swipeStartTime.getTime())\n\n\t\tthis.processSwipe(moveX, moveY, elapsedTime, e.currentTarget as HTMLElement)\n\t}\n\n\tprivate handleTouchStart(e: TouchEvent): void {\n\t\te.stopPropagation()\n\t\tif (!e.touches || e.touches.length === 0)\n\t\t\treturn\n\n\t\tthis.startSwipe(e.touches[0].clientX, e.touches[0].clientY, e.currentTarget as HTMLElement)\n\t}\n\n\tprivate handleTouchEnd(e: TouchEvent): void {\n\t\te.stopPropagation()\n\t\tif (!e.changedTouches || e.changedTouches.length === 0)\n\t\t\treturn\n\n\t\tconst moveX = e.changedTouches[0].clientX - this.swipeStartX\n\t\tconst moveY = e.changedTouches[0].clientY - this.swipeStartY\n\t\tconst elapsedTime = (new Date().getTime() - this.swipeStartTime.getTime())\n\n\t\tthis.processSwipe(moveX, moveY, elapsedTime, e.currentTarget as HTMLElement)\n\t}\n\n\tprivate startSwipe(x: number, y: number, element: HTMLElement): void {\n\t\tthis.swipeStartX = x\n\t\tthis.swipeStartY = y\n\t\tthis.swipeStartTime = new Date()\n\t\tthis.swipeStartElement = element\n\t}\n\n\tprivate processSwipe(moveX: number, moveY: number, elapsedTime: number, currentElement: HTMLElement): void {\n\t\tif (Math.abs(moveX) > OffcanvasSwipe.MinHorizontalMove\n\t\t\t&& Math.abs(moveY) < OffcanvasSwipe.MaxVerticalMove\n\t\t\t&& elapsedTime < OffcanvasSwipe.Millisecond) {\n\t\t\tconst angle = Math.abs(Math.atan2(moveY, moveX) * 180 / Math.PI)\n\t\t\tif (angle <= 45 || angle >= 135) {\n\t\t\t\t// Check if swipe started and ended on the same element\n\t\t\t\tif (this.swipeStartElement !== currentElement) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst isMainArea = currentElement === this.swipeElement\n\t\t\t\tconst isSidebarArea = currentElement === this.offcanvasElement\n\n\t\t\t\tconst isRTL = document.documentElement.dir === 'rtl' || document.dir === 'rtl'\n\n\t\t\t\tif (isMainArea) {\n\t\t\t\t\tconst shouldOpen = isRTL ? moveX < 0 : moveX > 0\n\t\t\t\t\tif (shouldOpen) {\n\t\t\t\t\t\tthis.showMenu()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (isSidebarArea) {\n\t\t\t\t\tconst shouldClose = isRTL ? moveX > 0 : moveX < 0\n\t\t\t\t\tif (shouldClose) {\n\t\t\t\t\t\tthis.hideMenu()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate hideMenu(): void {\n\t\tif (!this.offcanvasElement)\n\t\t\treturn\n\n\t\tif (this.isOffcanvasActive(this.offcanvasElement)) {\n\t\t\tconst offcanvasInstance = (window as any).bootstrap?.Offcanvas?.getInstance(this.offcanvasElement)\n\t\t\tif (offcanvasInstance) {\n\t\t\t\toffcanvasInstance.hide()\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.offcanvasElement.classList.remove('show')\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate showMenu(): void {\n\t\tif (!this.offcanvasElement)\n\t\t\treturn\n\n\t\tif (this.isOffcanvasActive(this.offcanvasElement)) {\n\t\t\tconst offcanvasInstance = (window as any).bootstrap?.Offcanvas?.getInstance(this.offcanvasElement)\n\t\t\t\t|| new (window as any).bootstrap.Offcanvas(this.offcanvasElement)\n\t\t\tif (offcanvasInstance) {\n\t\t\t\toffcanvasInstance.show()\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.offcanvasElement.classList.add('show')\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isOffcanvasActive(offcanvasElement: HTMLElement): boolean {\n\t\tconst classList = offcanvasElement.classList\n\t\tconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl']\n\n\t\tconst hasOffcanvasBreakpoint = breakpoints.some(bp =>\n\t\t\tclassList.contains(`offcanvas-${bp}`),\n\t\t)\n\n\t\tif (!hasOffcanvasBreakpoint && classList.contains('offcanvas')) {\n\t\t\treturn true\n\t\t}\n\n\t\tif (hasOffcanvasBreakpoint) {\n\t\t\tconst viewportWidth = window.innerWidth\n\t\t\tconst breakpointValues: { [key: string]: number } = {\n\t\t\t\tsm: 576,\n\t\t\t\tmd: 768,\n\t\t\t\tlg: 992,\n\t\t\t\txl: 1200,\n\t\t\t\txxl: 1400,\n\t\t\t}\n\n\t\t\tfor (const bp of breakpoints) {\n\t\t\t\tif (classList.contains(`offcanvas-${bp}`)) {\n\t\t\t\t\tconst isActive = viewportWidth < breakpointValues[bp]\n\t\t\t\t\treturn isActive\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.isInitialized) {\n\t\t\tif (this.isTouch) {\n\t\t\t\t// Touch platform mode - remove TouchEvents\n\t\t\t\tif (this.swipeElement) {\n\t\t\t\t\tthis.swipeElement.removeEventListener('touchstart', this.boundHandleTouchStart)\n\t\t\t\t\tthis.swipeElement.removeEventListener('touchend', this.boundHandleTouchEnd)\n\t\t\t\t}\n\t\t\t\tif (this.offcanvasElement) {\n\t\t\t\t\tthis.offcanvasElement.removeEventListener('touchstart', this.boundHandleTouchStart)\n\t\t\t\t\tthis.offcanvasElement.removeEventListener('touchend', this.boundHandleTouchEnd)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Desktop platform mode - remove PointerEvents\n\t\t\t\tif (this.swipeElement) {\n\t\t\t\t\tthis.swipeElement.removeEventListener('pointerdown', this.boundHandlePointerDown)\n\t\t\t\t\tthis.swipeElement.removeEventListener('pointerup', this.boundHandlePointerUp)\n\t\t\t\t}\n\t\t\t\tif (this.offcanvasElement) {\n\t\t\t\t\tthis.offcanvasElement.removeEventListener('pointerdown', this.boundHandlePointerDown)\n\t\t\t\t\tthis.offcanvasElement.removeEventListener('pointerup', this.boundHandlePointerUp)\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.isInitialized = false\n\t\t}\n\t}\n}\n","import type { DotNet } from '@microsoft/dotnet-js-interop'\n\nexport class BackToTop {\n\tprivate dotNetObjRef: DotNet.DotNetObject | undefined\n\tprivate scrollEventHandler: () => Promise<void>\n\n\tconstructor() {\n\t\tthis.scrollEventHandler = async () => {\n\t\t\tawait this.dotNetObjRef?.invokeMethodAsync('OnUpdate', window.scrollY)\n\t\t}\n\t}\n\n\tsetReference(dotNetObjRef: DotNet.DotNetObject) {\n\t\tthis.dotNetObjRef = dotNetObjRef\n\n\t\twindow.addEventListener('scroll', this.scrollEventHandler)\n\t\treturn window.scrollY\n\t}\n\n\tscrollTop() {\n\t\tdocument.body.scrollTop = 0\n\t\tdocument.documentElement.scrollTop = 0\n\t}\n\n\tdispose() {\n\t\tthis.dotNetObjRef?.dispose()\n\t\twindow.removeEventListener('scroll', this.scrollEventHandler)\n\t}\n}\n","import { BackToTop } from './BackToTop.js'\nimport { OffcanvasSwipe } from './OffcanvasSwipe.js'\n\nexport class BlazorBody {\n\tOffcanvasSwipe: OffcanvasSwipe\n\tBackToTop: BackToTop\n\tconstructor() {\n\t\tthis.OffcanvasSwipe = new OffcanvasSwipe()\n\t\tthis.BackToTop = new BackToTop()\n\t}\n}\n\n(window as any).BlazorBody = new BlazorBody()\n"],"names":["__publicField"],"mappings":";;;;;;;;;;;CAAO,MAAM,eAAA,GAAN,MAAM,eAAA,CAAe;CAAA,EAoB3B,WAAA,GAAc;CAfd,IAAAA,eAAA,CAAA,IAAA,EAAQ,gBAAA,kBAAuB,IAAI,IAAA,CAAK,CAAC,CAAA,CAAA;CACzC,IAAAA,eAAA,CAAA,IAAA,EAAQ,aAAA,EAAsB,CAAA,CAAA;CAC9B,IAAAA,eAAA,CAAA,IAAA,EAAQ,aAAA,EAAsB,CAAA,CAAA;CAC9B,IAAAA,eAAA,CAAA,IAAA,EAAQ,mBAAA,CAAA;CACR,IAAAA,eAAA,CAAA,IAAA,EAAQ,cAAA,CAAA;CACR,IAAAA,eAAA,CAAA,IAAA,EAAQ,kBAAA,CAAA;CACR,IAAAA,eAAA,CAAA,IAAA,EAAQ,eAAA,EAAyB,KAAA,CAAA;CACjC,IAAAA,eAAA,CAAA,IAAA,EAAQ,SAAA,EAAmB,KAAA,CAAA;CAG3B;CAAA,IAAAA,eAAA,CAAA,IAAA,EAAQ,wBAAA,CAAA;CACR,IAAAA,eAAA,CAAA,IAAA,EAAQ,sBAAA,CAAA;CACR,IAAAA,eAAA,CAAA,IAAA,EAAQ,uBAAA,CAAA;CACR,IAAAA,eAAA,CAAA,IAAA,EAAQ,qBAAA,CAAA;CAKP,IAAA,IAAA,CAAK,sBAAA,GAAyB,IAAA,CAAK,iBAAA,CAAkB,IAAA,CAAK,IAAI,CAAA;CAC9D,IAAA,IAAA,CAAK,oBAAA,GAAuB,IAAA,CAAK,eAAA,CAAgB,IAAA,CAAK,IAAI,CAAA;CAC1D,IAAA,IAAA,CAAK,qBAAA,GAAwB,IAAA,CAAK,gBAAA,CAAiB,IAAA,CAAK,IAAI,CAAA;CAC5D,IAAA,IAAA,CAAK,mBAAA,GAAsB,IAAA,CAAK,cAAA,CAAe,IAAA,CAAK,IAAI,CAAA;CAAA,EACzD;CAAA,EAEO,UAAA,CAAW,WAAA,EAAqB,WAAA,EAAqB,OAAA,EAA2B;CACtF,IAAA,IAAA,CAAK,OAAA,GAAU,OAAA;CAGf,IAAA,IAAA,CAAK,YAAA,GAAe,QAAA,CAAS,cAAA,CAAe,WAAW,CAAA;CACvD,IAAA,IAAA,CAAK,gBAAA,GAAmB,QAAA,CAAS,cAAA,CAAe,WAAW,CAAA;CAE3D,IAAA,IAAI,CAAC,IAAA,CAAK,YAAA,IAAgB,CAAC,KAAK,gBAAA,EAAkB;CACjD,MAAA,OAAO,KAAA;CAAA,IACR;CAEA,IAAA,IAAA,CAAK,UAAA,EAAW;CAChB,IAAA,IAAA,CAAK,aAAA,GAAgB,IAAA;CACrB,IAAA,OAAO,IAAA;CAAA,EACR;CAAA,EAEQ,UAAA,GAAmB;CAC1B,IAAA,IAAI,CAAC,IAAA,CAAK,YAAA,IAAgB,CAAC,IAAA,CAAK,gBAAA;CAC/B,MAAA;CAED,IAAA,IAAI,KAAK,OAAA,EAAS;CAGjB,MAAA,IAAA,CAAK,YAAA,CAAa,gBAAA,CAAiB,YAAA,EAAc,IAAA,CAAK,qBAAqB,CAAA;CAC3E,MAAA,IAAA,CAAK,YAAA,CAAa,gBAAA,CAAiB,UAAA,EAAY,IAAA,CAAK,mBAAmB,CAAA;CAEvE,MAAA,IAAA,CAAK,gBAAA,CAAiB,gBAAA,CAAiB,YAAA,EAAc,IAAA,CAAK,qBAAqB,CAAA;CAC/E,MAAA,IAAA,CAAK,gBAAA,CAAiB,gBAAA,CAAiB,UAAA,EAAY,IAAA,CAAK,mBAAmB,CAAA;CAAA,IAC5E,CAAA,MACK;CAGJ,MAAA,IAAA,CAAK,YAAA,CAAa,gBAAA,CAAiB,aAAA,EAAe,IAAA,CAAK,sBAAsB,CAAA;CAC7E,MAAA,IAAA,CAAK,YAAA,CAAa,gBAAA,CAAiB,WAAA,EAAa,IAAA,CAAK,oBAAoB,CAAA;CAEzE,MAAA,IAAA,CAAK,gBAAA,CAAiB,gBAAA,CAAiB,aAAA,EAAe,IAAA,CAAK,sBAAsB,CAAA;CACjF,MAAA,IAAA,CAAK,gBAAA,CAAiB,gBAAA,CAAiB,WAAA,EAAa,IAAA,CAAK,oBAAoB,CAAA;CAAA,IAC9E;CAAA,EACD;CAAA,EAEQ,kBAAkB,CAAA,EAAuB;CAChD,IAAA,CAAA,CAAE,eAAA,EAAgB;CAClB,IAAA,IAAI,CAAC,CAAA,CAAE,SAAA;CACN,MAAA;CAED,IAAA,IAAA,CAAK,WAAW,CAAA,CAAE,OAAA,EAAS,CAAA,CAAE,OAAA,EAAS,EAAE,aAA4B,CAAA;CAAA,EACrE;CAAA,EAEQ,gBAAgB,CAAA,EAAuB;CAC9C,IAAA,CAAA,CAAE,eAAA,EAAgB;CAClB,IAAA,IAAI,CAAC,CAAA,CAAE,SAAA;CACN,MAAA;CAED,IAAA,MAAM,KAAA,GAAQ,CAAA,CAAE,OAAA,GAAU,IAAA,CAAK,WAAA;CAC/B,IAAA,MAAM,KAAA,GAAQ,CAAA,CAAE,OAAA,GAAU,IAAA,CAAK,WAAA;CAC/B,IAAA,MAAM,WAAA,GAAA,qBAAmB,IAAA,EAAK,EAAE,SAAQ,GAAI,IAAA,CAAK,eAAe,OAAA,EAAQ;CAExE,IAAA,IAAA,CAAK,YAAA,CAAa,KAAA,EAAO,KAAA,EAAO,WAAA,EAAa,EAAE,aAA4B,CAAA;CAAA,EAC5E;CAAA,EAEQ,iBAAiB,CAAA,EAAqB;CAC7C,IAAA,CAAA,CAAE,eAAA,EAAgB;CAClB,IAAA,IAAI,CAAC,CAAA,CAAE,OAAA,IAAW,CAAA,CAAE,QAAQ,MAAA,KAAW,CAAA;CACtC,MAAA;CAED,IAAA,IAAA,CAAK,UAAA,CAAW,CAAA,CAAE,OAAA,CAAQ,CAAC,CAAA,CAAE,OAAA,EAAS,CAAA,CAAE,OAAA,CAAQ,CAAC,CAAA,CAAE,OAAA,EAAS,CAAA,CAAE,aAA4B,CAAA;CAAA,EAC3F;CAAA,EAEQ,eAAe,CAAA,EAAqB;CAC3C,IAAA,CAAA,CAAE,eAAA,EAAgB;CAClB,IAAA,IAAI,CAAC,CAAA,CAAE,cAAA,IAAkB,CAAA,CAAE,eAAe,MAAA,KAAW,CAAA;CACpD,MAAA;CAED,IAAA,MAAM,QAAQ,CAAA,CAAE,cAAA,CAAe,CAAC,CAAA,CAAE,UAAU,IAAA,CAAK,WAAA;CACjD,IAAA,MAAM,QAAQ,CAAA,CAAE,cAAA,CAAe,CAAC,CAAA,CAAE,UAAU,IAAA,CAAK,WAAA;CACjD,IAAA,MAAM,WAAA,GAAA,qBAAmB,IAAA,EAAK,EAAE,SAAQ,GAAI,IAAA,CAAK,eAAe,OAAA,EAAQ;CAExE,IAAA,IAAA,CAAK,YAAA,CAAa,KAAA,EAAO,KAAA,EAAO,WAAA,EAAa,EAAE,aAA4B,CAAA;CAAA,EAC5E;CAAA,EAEQ,UAAA,CAAW,CAAA,EAAW,CAAA,EAAW,OAAA,EAA4B;CACpE,IAAA,IAAA,CAAK,WAAA,GAAc,CAAA;CACnB,IAAA,IAAA,CAAK,WAAA,GAAc,CAAA;CACnB,IAAA,IAAA,CAAK,cAAA,uBAAqB,IAAA,EAAK;CAC/B,IAAA,IAAA,CAAK,iBAAA,GAAoB,OAAA;CAAA,EAC1B;CAAA,EAEQ,YAAA,CAAa,KAAA,EAAe,KAAA,EAAe,WAAA,EAAqB,cAAA,EAAmC;CAC1G,IAAA,IAAI,IAAA,CAAK,GAAA,CAAI,KAAK,CAAA,GAAI,gBAAe,iBAAA,IACjC,IAAA,CAAK,GAAA,CAAI,KAAK,CAAA,GAAI,eAAA,CAAe,eAAA,IACjC,WAAA,GAAc,gBAAe,WAAA,EAAa;CAC7C,MAAA,MAAM,KAAA,GAAQ,IAAA,CAAK,GAAA,CAAI,IAAA,CAAK,KAAA,CAAM,OAAO,KAAK,CAAA,GAAI,GAAA,GAAM,IAAA,CAAK,EAAE,CAAA;CAC/D,MAAA,IAAI,KAAA,IAAS,EAAA,IAAM,KAAA,IAAS,GAAA,EAAK;CAEhC,QAAA,IAAI,IAAA,CAAK,sBAAsB,cAAA,EAAgB;CAC9C,UAAA;CAAA,QACD;CAEA,QAAA,MAAM,UAAA,GAAa,mBAAmB,IAAA,CAAK,YAAA;CAC3C,QAAA,MAAM,aAAA,GAAgB,mBAAmB,IAAA,CAAK,gBAAA;CAE9C,QAAA,MAAM,QAAQ,QAAA,CAAS,eAAA,CAAgB,GAAA,KAAQ,KAAA,IAAS,SAAS,GAAA,KAAQ,KAAA;CAEzE,QAAA,IAAI,UAAA,EAAY;CACf,UAAA,MAAM,UAAA,GAAa,KAAA,GAAQ,KAAA,GAAQ,CAAA,GAAI,KAAA,GAAQ,CAAA;CAC/C,UAAA,IAAI,UAAA,EAAY;CACf,YAAA,IAAA,CAAK,QAAA,EAAS;CAAA,UACf;CAAA,QACD,WACS,aAAA,EAAe;CACvB,UAAA,MAAM,WAAA,GAAc,KAAA,GAAQ,KAAA,GAAQ,CAAA,GAAI,KAAA,GAAQ,CAAA;CAChD,UAAA,IAAI,WAAA,EAAa;CAChB,YAAA,IAAA,CAAK,QAAA,EAAS;CAAA,UACf;CAAA,QACD;CAAA,MACD;CAAA,IACD;CAAA,EACD;CAAA,EAEQ,QAAA,GAAiB;CACxB,IAAA,IAAI,CAAC,IAAA,CAAK,gBAAA;CACT,MAAA;CAED,IAAA,IAAI,IAAA,CAAK,iBAAA,CAAkB,IAAA,CAAK,gBAAgB,CAAA,EAAG;CAClD,MAAA,MAAM,oBAAqB,MAAA,CAAe,SAAA,EAAW,SAAA,EAAW,WAAA,CAAY,KAAK,gBAAgB,CAAA;CACjG,MAAA,IAAI,iBAAA,EAAmB;CACtB,QAAA,iBAAA,CAAkB,IAAA,EAAK;CAAA,MACxB,CAAA,MACK;CACJ,QAAA,IAAA,CAAK,gBAAA,CAAiB,SAAA,CAAU,MAAA,CAAO,MAAM,CAAA;CAAA,MAC9C;CAAA,IACD;CAAA,EACD;CAAA,EAEQ,QAAA,GAAiB;CACxB,IAAA,IAAI,CAAC,IAAA,CAAK,gBAAA;CACT,MAAA;CAED,IAAA,IAAI,IAAA,CAAK,iBAAA,CAAkB,IAAA,CAAK,gBAAgB,CAAA,EAAG;CAClD,MAAA,MAAM,iBAAA,GAAqB,MAAA,CAAe,SAAA,EAAW,SAAA,EAAW,WAAA,CAAY,IAAA,CAAK,gBAAgB,CAAA,IAC7F,IAAK,MAAA,CAAe,SAAA,CAAU,SAAA,CAAU,KAAK,gBAAgB,CAAA;CACjE,MAAA,IAAI,iBAAA,EAAmB;CACtB,QAAA,iBAAA,CAAkB,IAAA,EAAK;CAAA,MACxB,CAAA,MACK;CACJ,QAAA,IAAA,CAAK,gBAAA,CAAiB,SAAA,CAAU,GAAA,CAAI,MAAM,CAAA;CAAA,MAC3C;CAAA,IACD;CAAA,EACD;CAAA,EAEQ,kBAAkB,gBAAA,EAAwC;CACjE,IAAA,MAAM,YAAY,gBAAA,CAAiB,SAAA;CACnC,IAAA,MAAM,cAAc,CAAC,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,MAAM,KAAK,CAAA;CAElD,IAAA,MAAM,yBAAyB,WAAA,CAAY,IAAA;CAAA,MAAK,CAAA,EAAA,KAC/C,SAAA,CAAU,QAAA,CAAS,CAAA,UAAA,EAAa,EAAE,CAAA,CAAE;CAAA,KACrC;CAEA,IAAA,IAAI,CAAC,sBAAA,IAA0B,SAAA,CAAU,QAAA,CAAS,WAAW,CAAA,EAAG;CAC/D,MAAA,OAAO,IAAA;CAAA,IACR;CAEA,IAAA,IAAI,sBAAA,EAAwB;CAC3B,MAAA,MAAM,gBAAgB,MAAA,CAAO,UAAA;CAC7B,MAAA,MAAM,gBAAA,GAA8C;CAAA,QACnD,EAAA,EAAI,GAAA;CAAA,QACJ,EAAA,EAAI,GAAA;CAAA,QACJ,EAAA,EAAI,GAAA;CAAA,QACJ,EAAA,EAAI,IAAA;CAAA,QACJ,GAAA,EAAK;CAAA,OACN;CAEA,MAAA,KAAA,MAAW,MAAM,WAAA,EAAa;CAC7B,QAAA,IAAI,SAAA,CAAU,QAAA,CAAS,CAAA,UAAA,EAAa,EAAE,EAAE,CAAA,EAAG;CAC1C,UAAA,MAAM,QAAA,GAAW,aAAA,GAAgB,gBAAA,CAAiB,EAAE,CAAA;CACpD,UAAA,OAAO,QAAA;CAAA,QACR;CAAA,MACD;CAAA,IACD;CAEA,IAAA,OAAO,KAAA;CAAA,EACR;CAAA,EAEO,OAAA,GAAgB;CACtB,IAAA,IAAI,KAAK,aAAA,EAAe;CACvB,MAAA,IAAI,KAAK,OAAA,EAAS;CAEjB,QAAA,IAAI,KAAK,YAAA,EAAc;CACtB,UAAA,IAAA,CAAK,YAAA,CAAa,mBAAA,CAAoB,YAAA,EAAc,IAAA,CAAK,qBAAqB,CAAA;CAC9E,UAAA,IAAA,CAAK,YAAA,CAAa,mBAAA,CAAoB,UAAA,EAAY,IAAA,CAAK,mBAAmB,CAAA;CAAA,QAC3E;CACA,QAAA,IAAI,KAAK,gBAAA,EAAkB;CAC1B,UAAA,IAAA,CAAK,gBAAA,CAAiB,mBAAA,CAAoB,YAAA,EAAc,IAAA,CAAK,qBAAqB,CAAA;CAClF,UAAA,IAAA,CAAK,gBAAA,CAAiB,mBAAA,CAAoB,UAAA,EAAY,IAAA,CAAK,mBAAmB,CAAA;CAAA,QAC/E;CAAA,MACD,CAAA,MACK;CAEJ,QAAA,IAAI,KAAK,YAAA,EAAc;CACtB,UAAA,IAAA,CAAK,YAAA,CAAa,mBAAA,CAAoB,aAAA,EAAe,IAAA,CAAK,sBAAsB,CAAA;CAChF,UAAA,IAAA,CAAK,YAAA,CAAa,mBAAA,CAAoB,WAAA,EAAa,IAAA,CAAK,oBAAoB,CAAA;CAAA,QAC7E;CACA,QAAA,IAAI,KAAK,gBAAA,EAAkB;CAC1B,UAAA,IAAA,CAAK,gBAAA,CAAiB,mBAAA,CAAoB,aAAA,EAAe,IAAA,CAAK,sBAAsB,CAAA;CACpF,UAAA,IAAA,CAAK,gBAAA,CAAiB,mBAAA,CAAoB,WAAA,EAAa,IAAA,CAAK,oBAAoB,CAAA;CAAA,QACjF;CAAA,MACD;CACA,MAAA,IAAA,CAAK,aAAA,GAAgB,KAAA;CAAA,IACtB;CAAA,EACD;CACD,CAAA;AA9OCA,gBAAA,CADY,iBACY,mBAAA,EAAoB,GAAA,CAAA;AAC5CA,gBAAA,CAFY,iBAEY,iBAAA,EAAkB,EAAA,CAAA;AAC1CA,gBAAA,CAHY,iBAGY,aAAA,EAAc,GAAA,CAAA;CAHhC,IAAM,cAAA,GAAN,eAAA;;;;;;;;;;CCEA,MAAM,SAAA,CAAU;CAAA,EAItB,WAAA,GAAc;CAHd,IAAAA,eAAA,CAAA,IAAA,EAAQ,cAAA,CAAA;CACR,IAAAA,eAAA,CAAA,IAAA,EAAQ,oBAAA,CAAA;CAGP,IAAA,IAAA,CAAK,qBAAqB,YAAY;CACrC,MAAA,MAAM,IAAA,CAAK,YAAA,EAAc,iBAAA,CAAkB,UAAA,EAAY,OAAO,OAAO,CAAA;CAAA,IACtE,CAAA;CAAA,EACD;CAAA,EAEA,aAAa,YAAA,EAAmC;CAC/C,IAAA,IAAA,CAAK,YAAA,GAAe,YAAA;CAEpB,IAAA,MAAA,CAAO,gBAAA,CAAiB,QAAA,EAAU,IAAA,CAAK,kBAAkB,CAAA;CACzD,IAAA,OAAO,MAAA,CAAO,OAAA;CAAA,EACf;CAAA,EAEA,SAAA,GAAY;CACX,IAAA,QAAA,CAAS,KAAK,SAAA,GAAY,CAAA;CAC1B,IAAA,QAAA,CAAS,gBAAgB,SAAA,GAAY,CAAA;CAAA,EACtC;CAAA,EAEA,OAAA,GAAU;CACT,IAAA,IAAA,CAAK,cAAc,OAAA,EAAQ;CAC3B,IAAA,MAAA,CAAO,mBAAA,CAAoB,QAAA,EAAU,IAAA,CAAK,kBAAkB,CAAA;CAAA,EAC7D;CACD;;;;;;;;;;CCzBO,MAAM,UAAA,CAAW;CAAA,EAGvB,WAAA,GAAc;CAFd,IAAA,aAAA,CAAA,IAAA,EAAA,gBAAA,CAAA;CACA,IAAA,aAAA,CAAA,IAAA,EAAA,WAAA,CAAA;CAEC,IAAA,IAAA,CAAK,cAAA,GAAiB,IAAI,cAAA,EAAe;CACzC,IAAA,IAAA,CAAK,SAAA,GAAY,IAAI,SAAA,EAAU;CAAA,EAChC;CACD;CAEC,MAAA,CAAe,UAAA,GAAa,IAAI,UAAA,EAAW;;;;;;"}