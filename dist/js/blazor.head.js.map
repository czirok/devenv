{"version":3,"file":"blazor.head.js","sources":["../src/ChangeTheme.ts","../src/CultureSelector.ts","../src/BlazorHead.ts"],"sourcesContent":["// ChangeTheme.ts\n\nimport type { DotNet } from '@microsoft/dotnet-js-interop'\n\nexport class ChangeTheme {\n\tprivate readonly THEME_STORAGE_NAME = 'theme'\n\tprivate readonly THEME_ATTRIBUTE = 'data-bs-theme'\n\tprivate readonly THEME_LIGHT = 'light'\n\tprivate readonly THEME_DARK = 'dark'\n\tprivate readonly THEME_AUTO = 'auto'\n\n\tprivate dotNetObjRef?: DotNet.DotNetObject\n\tprivate _darkColorScheme: MediaQueryList\n\n\tget _systemTheme(): string {\n\t\treturn this._darkColorScheme.matches ? this.THEME_DARK : this.THEME_LIGHT\n\t}\n\n\tget _storageTheme(): string | null {\n\t\treturn localStorage.getItem(this.THEME_STORAGE_NAME)\n\t}\n\n\tget _htmlTheme(): string | null {\n\t\treturn document.documentElement.getAttribute(this.THEME_ATTRIBUTE)\n\t}\n\n\tconstructor() {\n\t\tthis._darkColorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n\t\tthis._keepYourEyesOnTheTheme()\n\t}\n\n\tsetReference(dotNetObjRef: DotNet.DotNetObject): void {\n\t\tthis.dotNetObjRef = dotNetObjRef\n\t}\n\n\tgetTheme(): string | null {\n\t\treturn this._storageTheme\n\t}\n\n\tsetTheme(theme: string): void {\n\t\tif (theme === this.THEME_AUTO)\n\t\t\tthis._setAllAndInvokeBlazor(theme, this._systemTheme, this.THEME_AUTO)\n\t\telse\n\t\t\tthis._setAllAndInvokeBlazor(theme, theme, theme)\n\t}\n\n\t_keepYourEyesOnTheTheme(): void {\n\t\tthis._htmlElementChanged()\n\n\t\tconst htmlElementChanged = (mutationList: MutationRecord[]) => {\n\t\t\tfor (const mutation of mutationList) {\n\t\t\t\tif (mutation.type === 'attributes' && mutation.attributeName === this.THEME_ATTRIBUTE)\n\t\t\t\t\tthis._htmlElementChanged()\n\t\t\t}\n\t\t}\n\n\t\tconst observer = new MutationObserver(htmlElementChanged)\n\t\tobserver.observe(document.documentElement, {\n\t\t\tattributes: true,\n\t\t\tchildList: false,\n\t\t\tcharacterData: false,\n\t\t})\n\n\t\tconst systemThemeChanged = async (dark: MediaQueryListEvent) => {\n\t\t\tif (dark.matches)\n\t\t\t\tawait this._systemThemeChanged(this.THEME_DARK)\n\t\t\telse\n\t\t\t\tawait this._systemThemeChanged(this.THEME_LIGHT)\n\t\t}\n\n\t\tthis._darkColorScheme.addEventListener('change', systemThemeChanged)\n\t}\n\n\t_htmlElementChanged(): void {\n\t\tif (this._storageTheme) {\n\t\t\tif (this._storageTheme === this.THEME_AUTO) {\n\t\t\t\tif (this._htmlTheme !== this._systemTheme)\n\t\t\t\t\tthis._setHtmlAndInvokeBlazor(this._systemTheme, this.THEME_AUTO)\n\t\t\t}\n\t\t\telse if (this._storageTheme !== this._htmlTheme) {\n\t\t\t\tthis._setHtmlAndInvokeBlazor(this._storageTheme, this._storageTheme)\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._setAllAndInvokeBlazor(this.THEME_AUTO, this._systemTheme, this.THEME_AUTO)\n\t\t}\n\t}\n\n\tasync _systemThemeChanged(newValue: string): Promise<void> {\n\t\tif (this._storageTheme) {\n\t\t\tif (this._storageTheme === this.THEME_AUTO && this._htmlTheme !== newValue)\n\t\t\t\tawait this._setHtmlAndInvokeBlazor(newValue, this.THEME_AUTO)\n\t\t}\n\t\telse {\n\t\t\tawait this._setAllAndInvokeBlazor(this.THEME_AUTO, this._systemTheme, this.THEME_AUTO)\n\t\t}\n\t}\n\n\tasync _setHtmlAndInvokeBlazor(html: string, theme: string): Promise<void> {\n\t\tdocument.documentElement.setAttribute(this.THEME_ATTRIBUTE, html)\n\t\tawait this.dotNetObjRef?.invokeMethodAsync('OnUpdate', theme)\n\t}\n\n\tasync _setAllAndInvokeBlazor(storage: string, html: string, theme: string): Promise<void> {\n\t\tdocument.documentElement.setAttribute(this.THEME_ATTRIBUTE, html)\n\t\tlocalStorage.setItem(this.THEME_STORAGE_NAME, storage)\n\t\tawait this.dotNetObjRef?.invokeMethodAsync('OnUpdate', theme)\n\t}\n}\n","// CultureSelector.ts - Bootstrap head integration\n\nexport class CultureSelector {\n\tprivate readonly CULTURE_COOKIE_NAME = (window as any).BlazorCultureCookie\n\tprivate readonly CULTURE_STORAGE_KEY = (window as any).BlazorCultureStorage\n\tprivate readonly DEFAULT_CULTURE = 'en-US'\n\tprivate readonly RTL_CSS_ID = (window as any).BlazorRTLId ?? 'rtl-css'\n\tprivate readonly LTR_CSS_ID = (window as any).BlazorLTRId ?? 'ltr-css'\n\tprivate readonly RTL_CULTURES = [\n\t\t'ar',\n\t\t'arc',\n\t\t'dv',\n\t\t'fa',\n\t\t'ha',\n\t\t'he',\n\t\t'khw',\n\t\t'ks',\n\t\t'ku',\n\t\t'ps',\n\t\t'ur',\n\t\t'yi',\n\t\t'ug',\n\t\t'sd',\n\t\t'prs',\n\t\t'az',\n\t\t'nqo',\n\t\t'rhg',\n\t\t'syr',\n\t\t'ff',\n\t]\n\n\tprivate _currentCulture: string\n\n\tget _browserCulture(): string {\n\t\treturn navigator.language || this.DEFAULT_CULTURE\n\t}\n\n\tget _cookieCulture(): string | null {\n\t\tconst cookieValue = this._getCookie(this.CULTURE_COOKIE_NAME)\n\t\tif (!cookieValue)\n\t\t\treturn null\n\n\t\ttry {\n\t\t\t// Dekoding: \"c%3Dhu%7Cuic%3Dhu\" → \"c=hu|uic=hu\"\n\t\t\tconst decoded = decodeURIComponent(cookieValue)\n\t\t\t// \"c=hu|uic=hu\" → \"hu\"\n\t\t\tconst match = decoded.match(/c=([^|]+)/)\n\t\t\treturn match ? match[1] : null\n\t\t}\n\t\tcatch {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tget _storageCulture(): string | null {\n\t\tconst storageValue = localStorage.getItem(this.CULTURE_STORAGE_KEY)\n\t\tif (!storageValue)\n\t\t\treturn null\n\n\t\ttry {\n\t\t\t// Same format as cookie: \"c=hu|uic=hu\" → \"hu\"\n\t\t\tconst match = storageValue.match(/c=([^|]+)/)\n\t\t\treturn match ? match[1] : null\n\t\t}\n\t\tcatch {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tconstructor() {\n\t\tif (this.CULTURE_STORAGE_KEY) {\n\t\t\t// Storage mode\n\t\t\tthis._currentCulture = this._storageCulture || this._browserCulture\n\t\t\tthis._setStorage(this._currentCulture)\n\t\t}\n\t\telse {\n\t\t\t// Cookie mode (original logic)\n\t\t\tthis._currentCulture = this._cookieCulture || this._browserCulture\n\t\t\tthis._setCookie(this._currentCulture)\n\t\t}\n\n\t\t// Global variable for Blazor.start()\n\t\t;(window as any).BlazorCulture = this._currentCulture\n\n\t\t// HTML lang and dir attributes setting + CSS activation\n\t\tthis._setHtmlAttributes(this._currentCulture)\n\t}\n\n\tgetCookie(): string {\n\t\treturn this._currentCulture\n\t}\n\n\tsetCookie(culture: string): void {\n\t\tif (culture === this._currentCulture)\n\t\t\treturn\n\n\t\tthis._currentCulture = culture\n\n\t\tif (this.CULTURE_STORAGE_KEY) {\n\t\t\tthis._setStorage(culture)\n\t\t}\n\t\telse {\n\t\t\tthis._setCookie(culture)\n\t\t}\n\n\t\t;(window as any).BlazorCulture = culture\n\t}\n\n\tgetStorage(): string {\n\t\treturn this._currentCulture\n\t}\n\n\tsetStorage(culture: string): void {\n\t\tif (culture === this._currentCulture)\n\t\t\treturn\n\n\t\tthis._currentCulture = culture\n\n\t\tif (this.CULTURE_STORAGE_KEY) {\n\t\t\tthis._setStorage(culture)\n\t\t}\n\t\telse {\n\t\t\tthis._setCookie(culture)\n\t\t}\n\n\t\t;(window as any).BlazorCulture = culture\n\t}\n\n\tprivate _setHtmlAttributes(culture: string): void {\n\t\t// <html lang=\"hu\"> or <html lang=\"en-US\">\n\t\tdocument.documentElement.setAttribute('lang', culture)\n\n\t\t// <html dir=\"rtl\"> or <html dir=\"ltr\">\n\t\tconst langCode = culture.split('-')[0]\n\t\tconst isRtl = this.RTL_CULTURES.includes(langCode)\n\t\tdocument.documentElement.setAttribute('dir', isRtl ? 'rtl' : 'ltr')\n\n\t\t// CSS activation\n\t\tconst cssLink = document.getElementById(isRtl ? this.RTL_CSS_ID : this.LTR_CSS_ID) as HTMLLinkElement\n\t\tif (cssLink) {\n\t\t\tcssLink.disabled = false\n\t\t}\n\t}\n\n\tprivate _setStorage(culture: string): void {\n\t\t// ASP.NET RequestCulture format: \"c=hu|uic=hu\"\n\t\tconst cultureValue = `c=${culture}|uic=${culture}`\n\t\tlocalStorage.setItem(this.CULTURE_STORAGE_KEY, cultureValue)\n\t}\n\n\tprivate _setCookie(culture: string): void {\n\t\t// ASP.NET RequestCulture format: \"c=hu|uic=hu\"\n\t\tconst cookieValue = `c=${culture}|uic=${culture}`\n\t\tconst encodedValue = encodeURIComponent(cookieValue)\n\n\t\tdocument.cookie = `${this.CULTURE_COOKIE_NAME}=${encodedValue}`\n\t}\n\n\tprivate _getCookie(name: string): string | null {\n\t\tconst nameEQ = `${name}=`\n\t\tconst cookies = document.cookie.split(';')\n\n\t\tfor (let cookie of cookies) {\n\t\t\tcookie = cookie.trim()\n\t\t\tif (cookie.indexOf(nameEQ) === 0) {\n\t\t\t\treturn cookie.substring(nameEQ.length)\n\t\t\t}\n\t\t}\n\t\treturn null\n\t}\n}\n","import { ChangeTheme } from './ChangeTheme.js'\nimport { CultureSelector } from './CultureSelector.js'\n\nexport class BlazorHead {\n\tChangeTheme: ChangeTheme\n\tCultureSelector: CultureSelector\n\tconstructor() {\n\t\tthis.ChangeTheme = new ChangeTheme()\n\t\tthis.CultureSelector = new CultureSelector()\n\t}\n}\n\n(window as any).BlazorHead = new BlazorHead()\n"],"names":["__publicField"],"mappings":"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"}