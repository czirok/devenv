{"version":3,"file":"blazor.body.min.js","sources":["../src/OffcanvasSwipe.ts","../src/BackToTop.ts","../src/BlazorBody.ts"],"sourcesContent":["export class OffcanvasSwipe {\n\tprivate static readonly MinHorizontalMove = 100\n\tprivate static readonly MaxVerticalMove = 50\n\tprivate static readonly Millisecond = 300\n\n\tprivate swipeStartTime: Date = new Date(0)\n\tprivate swipeStartX: number = 0\n\tprivate swipeStartY: number = 0\n\tprivate swipeStartElement?: HTMLElement\n\tprivate swipeElement?: HTMLElement\n\tprivate offcanvasElement?: HTMLElement\n\tprivate isInitialized: boolean = false\n\tprivate isTouch: boolean = false\n\n\t// Bound event handlers to enable proper removal\n\tprivate boundHandlePointerDown: (e: PointerEvent) => void\n\tprivate boundHandlePointerUp: (e: PointerEvent) => void\n\tprivate boundHandleTouchStart: (e: TouchEvent) => void\n\tprivate boundHandleTouchEnd: (e: TouchEvent) => void\n\n\tconstructor() {\n\t\t// Platform support is universal, no need to check\n\t\t// Bind event handlers once to enable proper removal\n\t\tthis.boundHandlePointerDown = this.handlePointerDown.bind(this)\n\t\tthis.boundHandlePointerUp = this.handlePointerUp.bind(this)\n\t\tthis.boundHandleTouchStart = this.handleTouchStart.bind(this)\n\t\tthis.boundHandleTouchEnd = this.handleTouchEnd.bind(this)\n\t}\n\n\tpublic initialize(swipeAreaId: string, offcanvasId: string, isTouch: boolean): boolean {\n\t\tthis.isTouch = isTouch\n\n\t\t// Element references resolution\n\t\tthis.swipeElement = document.getElementById(swipeAreaId) as HTMLElement\n\t\tthis.offcanvasElement = document.getElementById(offcanvasId) as HTMLElement\n\n\t\tif (!this.swipeElement || !this.offcanvasElement) {\n\t\t\treturn false\n\t\t}\n\n\t\tthis.bindEvents()\n\t\tthis.isInitialized = true\n\t\treturn true\n\t}\n\n\tprivate bindEvents(): void {\n\t\tif (!this.swipeElement || !this.offcanvasElement)\n\t\t\treturn\n\n\t\tif (this.isTouch) {\n\t\t\t// Touch platform mode - TouchEvents only\n\t\t\t// Main area - for opening menu\n\t\t\tthis.swipeElement.addEventListener('touchstart', this.boundHandleTouchStart)\n\t\t\tthis.swipeElement.addEventListener('touchend', this.boundHandleTouchEnd)\n\t\t\t// Sidebar area - for closing menu\n\t\t\tthis.offcanvasElement.addEventListener('touchstart', this.boundHandleTouchStart)\n\t\t\tthis.offcanvasElement.addEventListener('touchend', this.boundHandleTouchEnd)\n\t\t}\n\t\telse {\n\t\t\t// Desktop platform mode - PointerEvents only\n\t\t\t// Main area - for opening menu\n\t\t\tthis.swipeElement.addEventListener('pointerdown', this.boundHandlePointerDown)\n\t\t\tthis.swipeElement.addEventListener('pointerup', this.boundHandlePointerUp)\n\t\t\t// Sidebar area - for closing menu\n\t\t\tthis.offcanvasElement.addEventListener('pointerdown', this.boundHandlePointerDown)\n\t\t\tthis.offcanvasElement.addEventListener('pointerup', this.boundHandlePointerUp)\n\t\t}\n\t}\n\n\tprivate handlePointerDown(e: PointerEvent): void {\n\t\te.stopPropagation()\n\t\tif (!e.isPrimary)\n\t\t\treturn\n\n\t\tthis.startSwipe(e.clientX, e.clientY, e.currentTarget as HTMLElement)\n\t}\n\n\tprivate handlePointerUp(e: PointerEvent): void {\n\t\te.stopPropagation()\n\t\tif (!e.isPrimary)\n\t\t\treturn\n\n\t\tconst moveX = e.clientX - this.swipeStartX\n\t\tconst moveY = e.clientY - this.swipeStartY\n\t\tconst elapsedTime = (new Date().getTime() - this.swipeStartTime.getTime())\n\n\t\tthis.processSwipe(moveX, moveY, elapsedTime, e.currentTarget as HTMLElement)\n\t}\n\n\tprivate handleTouchStart(e: TouchEvent): void {\n\t\te.stopPropagation()\n\t\tif (!e.touches || e.touches.length === 0)\n\t\t\treturn\n\n\t\tthis.startSwipe(e.touches[0].clientX, e.touches[0].clientY, e.currentTarget as HTMLElement)\n\t}\n\n\tprivate handleTouchEnd(e: TouchEvent): void {\n\t\te.stopPropagation()\n\t\tif (!e.changedTouches || e.changedTouches.length === 0)\n\t\t\treturn\n\n\t\tconst moveX = e.changedTouches[0].clientX - this.swipeStartX\n\t\tconst moveY = e.changedTouches[0].clientY - this.swipeStartY\n\t\tconst elapsedTime = (new Date().getTime() - this.swipeStartTime.getTime())\n\n\t\tthis.processSwipe(moveX, moveY, elapsedTime, e.currentTarget as HTMLElement)\n\t}\n\n\tprivate startSwipe(x: number, y: number, element: HTMLElement): void {\n\t\tthis.swipeStartX = x\n\t\tthis.swipeStartY = y\n\t\tthis.swipeStartTime = new Date()\n\t\tthis.swipeStartElement = element\n\t}\n\n\tprivate processSwipe(moveX: number, moveY: number, elapsedTime: number, currentElement: HTMLElement): void {\n\t\tif (Math.abs(moveX) > OffcanvasSwipe.MinHorizontalMove\n\t\t\t&& Math.abs(moveY) < OffcanvasSwipe.MaxVerticalMove\n\t\t\t&& elapsedTime < OffcanvasSwipe.Millisecond) {\n\t\t\tconst angle = Math.abs(Math.atan2(moveY, moveX) * 180 / Math.PI)\n\t\t\tif (angle <= 45 || angle >= 135) {\n\t\t\t\t// Check if swipe started and ended on the same element\n\t\t\t\tif (this.swipeStartElement !== currentElement) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst isMainArea = currentElement === this.swipeElement\n\t\t\t\tconst isSidebarArea = currentElement === this.offcanvasElement\n\n\t\t\t\tconst isRTL = document.documentElement.dir === 'rtl' || document.dir === 'rtl'\n\n\t\t\t\tif (isMainArea) {\n\t\t\t\t\tconst shouldOpen = isRTL ? moveX < 0 : moveX > 0\n\t\t\t\t\tif (shouldOpen) {\n\t\t\t\t\t\tthis.showMenu()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (isSidebarArea) {\n\t\t\t\t\tconst shouldClose = isRTL ? moveX > 0 : moveX < 0\n\t\t\t\t\tif (shouldClose) {\n\t\t\t\t\t\tthis.hideMenu()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate hideMenu(): void {\n\t\tif (!this.offcanvasElement)\n\t\t\treturn\n\n\t\tif (this.isOffcanvasActive(this.offcanvasElement)) {\n\t\t\tconst offcanvasInstance = (window as any).bootstrap?.Offcanvas?.getInstance(this.offcanvasElement)\n\t\t\tif (offcanvasInstance) {\n\t\t\t\toffcanvasInstance.hide()\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.offcanvasElement.classList.remove('show')\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate showMenu(): void {\n\t\tif (!this.offcanvasElement)\n\t\t\treturn\n\n\t\tif (this.isOffcanvasActive(this.offcanvasElement)) {\n\t\t\tconst offcanvasInstance = (window as any).bootstrap?.Offcanvas?.getInstance(this.offcanvasElement)\n\t\t\t\t|| new (window as any).bootstrap.Offcanvas(this.offcanvasElement)\n\t\t\tif (offcanvasInstance) {\n\t\t\t\toffcanvasInstance.show()\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.offcanvasElement.classList.add('show')\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isOffcanvasActive(offcanvasElement: HTMLElement): boolean {\n\t\tconst classList = offcanvasElement.classList\n\t\tconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl']\n\n\t\tconst hasOffcanvasBreakpoint = breakpoints.some(bp =>\n\t\t\tclassList.contains(`offcanvas-${bp}`),\n\t\t)\n\n\t\tif (!hasOffcanvasBreakpoint && classList.contains('offcanvas')) {\n\t\t\treturn true\n\t\t}\n\n\t\tif (hasOffcanvasBreakpoint) {\n\t\t\tconst viewportWidth = window.innerWidth\n\t\t\tconst breakpointValues: { [key: string]: number } = {\n\t\t\t\tsm: 576,\n\t\t\t\tmd: 768,\n\t\t\t\tlg: 992,\n\t\t\t\txl: 1200,\n\t\t\t\txxl: 1400,\n\t\t\t}\n\n\t\t\tfor (const bp of breakpoints) {\n\t\t\t\tif (classList.contains(`offcanvas-${bp}`)) {\n\t\t\t\t\tconst isActive = viewportWidth < breakpointValues[bp]\n\t\t\t\t\treturn isActive\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.isInitialized) {\n\t\t\tif (this.isTouch) {\n\t\t\t\t// Touch platform mode - remove TouchEvents\n\t\t\t\tif (this.swipeElement) {\n\t\t\t\t\tthis.swipeElement.removeEventListener('touchstart', this.boundHandleTouchStart)\n\t\t\t\t\tthis.swipeElement.removeEventListener('touchend', this.boundHandleTouchEnd)\n\t\t\t\t}\n\t\t\t\tif (this.offcanvasElement) {\n\t\t\t\t\tthis.offcanvasElement.removeEventListener('touchstart', this.boundHandleTouchStart)\n\t\t\t\t\tthis.offcanvasElement.removeEventListener('touchend', this.boundHandleTouchEnd)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Desktop platform mode - remove PointerEvents\n\t\t\t\tif (this.swipeElement) {\n\t\t\t\t\tthis.swipeElement.removeEventListener('pointerdown', this.boundHandlePointerDown)\n\t\t\t\t\tthis.swipeElement.removeEventListener('pointerup', this.boundHandlePointerUp)\n\t\t\t\t}\n\t\t\t\tif (this.offcanvasElement) {\n\t\t\t\t\tthis.offcanvasElement.removeEventListener('pointerdown', this.boundHandlePointerDown)\n\t\t\t\t\tthis.offcanvasElement.removeEventListener('pointerup', this.boundHandlePointerUp)\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.isInitialized = false\n\t\t}\n\t}\n}\n","import type { DotNet } from '@microsoft/dotnet-js-interop'\n\nexport class BackToTop {\n\tprivate dotNetObjRef: DotNet.DotNetObject | undefined\n\tprivate scrollEventHandler: () => Promise<void>\n\n\tconstructor() {\n\t\tthis.scrollEventHandler = async () => {\n\t\t\tawait this.dotNetObjRef?.invokeMethodAsync('OnUpdate', window.scrollY)\n\t\t}\n\t}\n\n\tsetReference(dotNetObjRef: DotNet.DotNetObject) {\n\t\tthis.dotNetObjRef = dotNetObjRef\n\n\t\twindow.addEventListener('scroll', this.scrollEventHandler)\n\t\treturn window.scrollY\n\t}\n\n\tscrollTop() {\n\t\tdocument.body.scrollTop = 0\n\t\tdocument.documentElement.scrollTop = 0\n\t}\n\n\tdispose() {\n\t\tthis.dotNetObjRef?.dispose()\n\t\twindow.removeEventListener('scroll', this.scrollEventHandler)\n\t}\n}\n","import { BackToTop } from './BackToTop.js'\nimport { OffcanvasSwipe } from './OffcanvasSwipe.js'\n\nexport class BlazorBody {\n\tOffcanvasSwipe: OffcanvasSwipe\n\tBackToTop: BackToTop\n\tconstructor() {\n\t\tthis.OffcanvasSwipe = new OffcanvasSwipe()\n\t\tthis.BackToTop = new BackToTop()\n\t}\n}\n\n(window as any).BlazorBody = new BlazorBody()\n"],"names":["u","r","e","t","n","_OffcanvasSwipe","__publicField","swipeAreaId","offcanvasId","isTouch","moveX","moveY","elapsedTime","x","y","element","currentElement","angle","isMainArea","isSidebarArea","isRTL","offcanvasInstance","offcanvasElement","classList","breakpoints","hasOffcanvasBreakpoint","bp","viewportWidth","breakpointValues","OffcanvasSwipe","o","s","BackToTop","dotNetObjRef","f","a","c","p","BlazorBody"],"mappings":"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"}